<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:DockTemplate.ViewModels"
        xmlns:dc="using:Dock.Avalonia.Controls"
        xmlns:dm="using:Dock.Model.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:avaloniaProgressRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
        mc:Ignorable="d" d:DesignWidth="1200" d:DesignHeight="680"
        x:Class="DockTemplate.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:Name="MainWindowView"
        UseLayoutRounding="True" 
        RenderOptions.BitmapInterpolationMode="HighQuality"
        WindowState="Normal" WindowStartupLocation="CenterScreen"
        FontFamily="Segoe UI, SF Pro Display, Noto Sans, Cantarel"
        Icon="/Assets/avalonia-logo.ico"
        Title="DockTemplate - Visual Studio Layout" Height="680" Width="1200"
        DragDrop.AllowDrop="True"
        
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="{Binding IsAcrylicLayoutActive}"
        >

    <Window.Resources>
        <StreamGeometry x:Key="DarkTheme">M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10Zm0-2V4a8 8 0 1 1 0 16Z</StreamGeometry>
        <StreamGeometry x:Key="AcrylicIcon">M4 4h8v8H4V4zm4 4h8v8H8V8zm4 4h8v8h-8v-8z</StreamGeometry>
    </Window.Resources>

    <Window.Styles>
        <!-- Dynamic margin for macOS traffic lights when acrylic is enabled -->
        <Style Selector="Grid.main-content">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        
        <Style Selector="Window[ExtendClientAreaToDecorationsHint=True] Grid.main-content">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        
        <!-- Acrylic Layout Styles -->
        <Style Selector="Border.acrylic-sidebar">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
        </Style>
        
        <!-- Acrylic sidebar gets the actual acrylic effect when window acrylic is enabled -->
        <Style Selector="Window[ExtendClientAreaToDecorationsHint=True] Border.acrylic-sidebar">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent" />
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Tighter margins for acrylic mode -->
        <Style Selector="Window[ExtendClientAreaToDecorationsHint=True] Grid.main-content.acrylic-active">
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        
        <!-- Smooth fade-in/fade-out animation for overlay -->
        <Style Selector="Border.drop-overlay">
            <Setter Property="Opacity" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Property="Opacity" Duration="0:0:0.25" Easing="CubicEaseOut" />
                </Transitions>
            </Setter>
        </Style>
        
        <Style Selector="Border.drop-overlay.show">
            <Setter Property="Opacity" Value="0.98" />
            <Setter Property="IsHitTestVisible" Value="True" />
        </Style>
        
        <!-- Smooth scale animation for the content -->
        <Style Selector="Grid.overlay-content">
            <Setter Property="RenderTransform" Value="scale(0.95)" />
            <Setter Property="Transitions">
                <Transitions>
                    <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.25" Easing="CubicEaseOut" />
                </Transitions>
            </Setter>
        </Style>
        
        <Style Selector="Border.drop-overlay.show Grid.overlay-content">
            <Setter Property="RenderTransform" Value="scale(1.0)" />
        </Style>
    </Window.Styles>

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

        <Grid x:Name="MainGrid" Classes="main-content" Classes.acrylic-active="{Binding IsAcrylicLayoutActive}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            
            <Grid.ColumnDefinitions>
                <!-- Acrylic sidebar column (hidden when acrylic is disabled) -->
                <ColumnDefinition Width="{Binding AcrylicSidebarWidth}" />
                <!-- Main content column -->
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            
            <Panel Grid.RowSpan="3" Grid.Column="0">
                <!-- Solid background for entire window when acrylic layout is disabled -->
                <Border IsVisible="{Binding !IsAcrylicLayoutActive}"
                        Background="{DynamicResource SystemRegionBrush}" />
        
                <!-- Acrylic background for left sidebar when layout is enabled -->
                <ExperimentalAcrylicBorder IsVisible="{Binding IsAcrylicLayoutActive}" IsHitTestVisible="False">
                    <ExperimentalAcrylicBorder.Material>
                        <ExperimentalAcrylicMaterial
                            BackgroundSource="Digger"
                            TintColor="{DynamicResource AcrylicFallbackColor}"
                            TintOpacity="1"
                            MaterialOpacity="0.75" />
                    </ExperimentalAcrylicBorder.Material>
                </ExperimentalAcrylicBorder>
            </Panel>
                
            <!-- Solid background for top area (menu row) in right column when acrylic is active -->
            <Border Grid.Row="0" Grid.Column="1" 
                    IsVisible="{Binding IsAcrylicLayoutActive}"
                    Background="{DynamicResource SystemRegionBrush}" 
                    ZIndex="5" />
            <!-- Acrylic Sidebar (Column 0) - Only spans main content area (Row 1) -->
            <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" 
                    Classes="acrylic-sidebar"
                    IsVisible="{Binding IsAcrylicLayoutActive}">
                <Grid>
                    <!-- Top draggable area for window dragging -->
                    <Border Height="28" VerticalAlignment="Top" 
                            Background="Transparent"
                            PointerPressed="OnPointerPressed" />
                    <!-- Sidebar content with top margin -->
                    <ContentControl Content="{Binding AcrylicSidebarContent}" Margin="0, 28, 0, 0" />
                </Grid>
            </Border>
            
            <!-- Resizable splitter between acrylic sidebar and main content -->
            <GridSplitter Grid.Row="1" Grid.Column="0" 
                         IsVisible="{Binding IsAcrylicLayoutActive}"
                         Width="4" 
                         HorizontalAlignment="Right"
                         VerticalAlignment="Stretch"
                         Background="Transparent" />
       
            <!-- In-window menu (hidden on macOS, visible on Windows/Linux) -->
            <Grid Grid.Row="0" Grid.Column="1" ColumnDefinitions="Auto,*" x:Name="MenuBarGrid" 
                  Background="{DynamicResource SystemRegionBrush}"
                  ZIndex="10">
                <Menu Grid.Column="0" VerticalAlignment="Center" FontSize="12" Height="24" Padding="0 8 0 0">
                    <MenuItem Header="_File">
                        <MenuItem Header="_New Layout" Command="{Binding NewLayout}" />
                    </MenuItem>
                    <MenuItem Header="_Plugins">
                        <MenuItem Header="_Manage Plugins..." Command="{Binding ShowPluginManager}" />
                        <Separator />
                        <MenuItem Header="_Install Plugin..." Command="{Binding InstallPlugin}" />
                    </MenuItem>
                    <MenuItem Header="_Window" DataContext="{Binding Layout}">
                        <MenuItem Header="_Exit Windows" Command="{Binding ExitWindows}" />
                        <Separator />
                        <MenuItem Header="_Show Windows" Command="{Binding ShowWindows}" />
                    </MenuItem>
                </Menu>
                
                <!-- Empty space for window dragging -->
                <Border Grid.Column="1" 
                        Background="Transparent"
                        PointerPressed="OnPointerPressed" />
            </Grid>

        <!-- Main Dock Area -->
            <Panel Background="{DynamicResource SystemRegionBrush}" Grid.Row="1" Grid.Column="1" >
                <dc:DockControl x:Name="DockControl" Layout="{Binding Layout}" 
                                
                                Margin="4,4,4,4"   
                                
                                ZIndex="10" />
            </Panel>
   

        <!-- Drag & Drop Overlay - Theme-Aware Background with Smooth Animations -->
        <Border x:Name="DropOverlay" Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="2"
                Classes.drop-overlay="True"
                Classes.show="{Binding ShowDropOverlay}"
                Margin="-50"
                ZIndex="1000">
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource RegionColor}" Opacity="0.85" />
            </Border.Background>
            <!-- Rigid Grid Layout to Prevent Jumping -->
            <Grid RowDefinitions="120,120,80,60,*" 
                  Classes="overlay-content"
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center"
                  Width="400">
                
                <!-- Row 0: Plugin Icon -->
                <TextBlock Grid.Row="0"
                          Text="🔌" FontSize="80" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          Foreground="{DynamicResource SystemBaseHighColorBrush}" />
                
                <!-- Row 1: Main Message (Same font size for both states) -->
                <Grid Grid.Row="1" HorizontalAlignment="Center">
                    <!-- Drop Message (Ready State) -->
                    <TextBlock IsVisible="{Binding !IsInstallMode}"
                              Text="Drop plugin anywhere to install" 
                              FontSize="24" FontWeight="Bold" 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center"
                              TextWrapping="Wrap"
                              TextAlignment="Center"
                              Foreground="{DynamicResource SystemBaseHighColorBrush}" />
                    
                    <!-- Installing Message (Processing State) -->
                    <TextBlock IsVisible="{Binding IsInstallMode}"
                              Text="{Binding InstallStatusText}" 
                              FontSize="24" FontWeight="Bold" 
                              HorizontalAlignment="Center" 
                              VerticalAlignment="Center"
                              TextWrapping="Wrap"
                              TextAlignment="Center"
                              Foreground="{DynamicResource SystemBaseHighColorBrush}" />
                </Grid>
                
                <!-- Row 2: Sub Status Text -->
                <TextBlock Grid.Row="2"
                          Text="{Binding InstallSubText}" 
                          FontSize="16" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          IsVisible="{Binding IsInstallMode}"
                          Foreground="{DynamicResource SystemBaseMediumColorBrush}" />
                          
                <TextBlock Grid.Row="2"
                          Text="Supports .dockplugin files" 
                          FontSize="16" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          IsVisible="{Binding !IsInstallMode}"
                          Foreground="{DynamicResource SystemBaseMediumColorBrush}" />
                
                <!-- Row 3: Progress Ring (Bottom to avoid jumping) -->
                <avaloniaProgressRing:ProgressRing Grid.Row="3"
                                       Width="60" 
                                       Height="60"
                                       IsActive="{Binding ShowSpinner}"
                                       IsVisible="{Binding ShowSpinner}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource ThemeAccentColor}" />
            </Grid>
        </Border>

        <!-- Status Bar -->
        <Border Grid.Row="2" Grid.Column="1" Background="{DynamicResource SystemAccentColor}" 
                BorderBrush="{DynamicResource SystemAccentColorDark2}" BorderThickness="0,1,0,0"
                Margin="0,0,0,0"
                ZIndex="10">
           <Grid ColumnDefinitions="Auto, *, Auto, Auto">
               <TextBlock Grid.Column="0" FontSize="11" Text="Ready" Margin="8,4" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="White" />
            
               <!-- Acrylic Toggle Button -->
               <Button x:Name="AcrylicButton" Grid.Column="2" Background="Transparent"
                       HorizontalAlignment="Right" Margin="4,0" Foreground="White" MaxHeight="16" 
                       Command="{Binding ToggleAcrylic}">
                   <StackPanel Orientation="Horizontal">
                       <PathIcon Width="16" Height="16" Data="{StaticResource AcrylicIcon}" Margin="4,0,0,0" />
                   </StackPanel>
               </Button>
               
               <!-- Theme Toggle Button -->
               <Button HorizontalContentAlignment="Right" x:Name="ThemeButton" Grid.Column="3" Background="Transparent"
                       HorizontalAlignment="Right" Margin="4,0" Foreground="White" MaxHeight="16">
                   <StackPanel Orientation="Horizontal">
                       <PathIcon Width="16" Height="16" Data="{StaticResource DarkTheme}" Margin="4,0,0,0" />
                   </StackPanel>
               </Button>
           </Grid>
        </Border>
        </Grid>

</Window>
